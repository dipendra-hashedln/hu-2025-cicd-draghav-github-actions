name: Docker Build and Push Reusable

on:
  workflow_call:
    inputs:
      image_tag:
        required: true
        type: string
      repository:
        required: true
        type: string
      namespace:
        required: true
        type: string
      region:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_SESSION_TOKEN:
        required: true

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    outputs:
      image_tar: ${{ steps.save.outputs.image_tar }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t image:latest .

      - name: Save Docker image to file
        id: save
        run: |
          docker save image:latest > image.tar
          echo "image_tar=image.tar" >> $GITHUB_OUTPUT

      - name: Upload Docker image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: image.tar

  push:
    name: Push Docker Image
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load Docker image
        run: docker load -i image.tar

      - name: Tag Docker image
        run: |
          docker tag image:latest public.ecr.aws/${{ inputs.namespace }}/${{ inputs.repository }}:${{ inputs.image_tag }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ inputs.region }}

      - name: Login to Amazon ECR Public
        run: |
          aws ecr-public get-login-password --region ${{ inputs.region }} | \
          docker login --username AWS --password-stdin public.ecr.aws

      - name: Push Docker image
        run: |
          docker push public.ecr.aws/${{ inputs.namespace }}/${{ inputs.repository }}:${{ inputs.image_tag }}







